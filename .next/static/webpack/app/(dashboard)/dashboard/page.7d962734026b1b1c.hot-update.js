"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/dashboard/page",{

/***/ "(app-pages-browser)/./src/lib/mockAuth.ts":
/*!*****************************!*\
  !*** ./src/lib/mockAuth.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mockAuthService: function() { return /* binding */ mockAuthService; },\n/* harmony export */   mockUser: function() { return /* binding */ mockUser; }\n/* harmony export */ });\n// src/lib/mockAuth.ts\n// Mock user data\nconst mockUser = {\n    id: \"mock-user-1\",\n    name: \"Boss Samsay\",\n    email: \"boss.samsay@example.com\",\n    avatar: \"/assets/images/avatar.png\",\n    role: \"student\"\n};\n// Mock authentication functions\nconst mockAuthService = {\n    login: async (email, password)=>{\n        // Simple validation - any non-empty values will work\n        if (!email || !password) {\n            throw new Error(\"Email and password are required\");\n        }\n        // Simulate API delay\n        await new Promise((resolve)=>setTimeout(resolve, 800));\n        // Return mock user and token\n        return {\n            user: mockUser,\n            token: \"mock-jwt-token-for-development\"\n        };\n    },\n    register: async (name, email, phone, password)=>{\n        if (!name || !email || !phone || !password) {\n            throw new Error(\"All fields are required\");\n        }\n        // Simulate API delay\n        await new Promise((resolve)=>setTimeout(resolve, 800));\n        // Store verification data in localStorage\n        localStorage.setItem(\"ednux_verification_email\", email);\n        localStorage.setItem(\"ednux_verification_phone\", phone);\n        return true;\n    },\n    verifyOTP: async (otp, method)=>{\n        if (!otp || otp.length !== 4) {\n            throw new Error(\"Valid OTP is required\");\n        }\n        // Simulate API delay\n        await new Promise((resolve)=>setTimeout(resolve, 800));\n        // Clear verification data\n        localStorage.removeItem(\"ednux_verification_email\");\n        localStorage.removeItem(\"ednux_verification_phone\");\n        // Return mock user and token\n        return {\n            user: mockUser,\n            token: \"mock-jwt-token-for-development\"\n        };\n    },\n    resendOTP: async ()=>{\n        // Simulate API delay\n        await new Promise((resolve)=>setTimeout(resolve, 500));\n        return true;\n    },\n    forgotPassword: async (email)=>{\n        if (!email) {\n            throw new Error(\"Email is required\");\n        }\n        // Simulate API delay\n        await new Promise((resolve)=>setTimeout(resolve, 600));\n        return true;\n    },\n    resetPassword: async (token, newPassword)=>{\n        if (!token || !newPassword) {\n            throw new Error(\"Token and new password are required\");\n        }\n        // Simulate API delay\n        await new Promise((resolve)=>setTimeout(resolve, 600));\n        return true;\n    },\n    logout: async ()=>{\n        // Simulate API delay\n        await new Promise((resolve)=>setTimeout(resolve, 300));\n        return true;\n    },\n    loginWithGoogle: async ()=>{\n        // Simulate API delay\n        await new Promise((resolve)=>setTimeout(resolve, 800));\n        // Return mock user and token\n        return {\n            user: mockUser,\n            token: \"mock-google-auth-token-for-development\"\n        };\n    },\n    getCurrentUser: async ()=>{\n        // Check if we have a token\n        const token = localStorage.getItem(\"ednux_token\");\n        if (!token) {\n            return null;\n        }\n        // Simulate API delay\n        await new Promise((resolve)=>setTimeout(resolve, 300));\n        return mockUser;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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dGgudHM/MWEwYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL21vY2tBdXRoLnRzXG5cbi8vIE1vY2sgdXNlciBkYXRhXG5leHBvcnQgY29uc3QgbW9ja1VzZXIgPSB7XG4gICAgaWQ6ICdtb2NrLXVzZXItMScsXG4gICAgbmFtZTogJ0Jvc3MgU2Ftc2F5JyxcbiAgICBlbWFpbDogJ2Jvc3Muc2Ftc2F5QGV4YW1wbGUuY29tJyxcbiAgICBhdmF0YXI6ICcvYXNzZXRzL2ltYWdlcy9hdmF0YXIucG5nJyxcbiAgICByb2xlOiAnc3R1ZGVudCcsXG4gIH07XG4gIFxuICAvLyBNb2NrIGF1dGhlbnRpY2F0aW9uIGZ1bmN0aW9uc1xuICBleHBvcnQgY29uc3QgbW9ja0F1dGhTZXJ2aWNlID0ge1xuICAgIGxvZ2luOiBhc3luYyAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4ge1xuICAgICAgLy8gU2ltcGxlIHZhbGlkYXRpb24gLSBhbnkgbm9uLWVtcHR5IHZhbHVlcyB3aWxsIHdvcmtcbiAgICAgIGlmICghZW1haWwgfHwgIXBhc3N3b3JkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRW1haWwgYW5kIHBhc3N3b3JkIGFyZSByZXF1aXJlZCcpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBTaW11bGF0ZSBBUEkgZGVsYXlcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCA4MDApKTtcbiAgICAgIFxuICAgICAgLy8gUmV0dXJuIG1vY2sgdXNlciBhbmQgdG9rZW5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHVzZXI6IG1vY2tVc2VyLFxuICAgICAgICB0b2tlbjogJ21vY2stand0LXRva2VuLWZvci1kZXZlbG9wbWVudCcsXG4gICAgICB9O1xuICAgIH0sXG4gICAgXG4gICAgcmVnaXN0ZXI6IGFzeW5jIChuYW1lOiBzdHJpbmcsIGVtYWlsOiBzdHJpbmcsIHBob25lOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcpID0+IHtcbiAgICAgIGlmICghbmFtZSB8fCAhZW1haWwgfHwgIXBob25lIHx8ICFwYXNzd29yZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FsbCBmaWVsZHMgYXJlIHJlcXVpcmVkJyk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIFNpbXVsYXRlIEFQSSBkZWxheVxuICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDgwMCkpO1xuICAgICAgXG4gICAgICAvLyBTdG9yZSB2ZXJpZmljYXRpb24gZGF0YSBpbiBsb2NhbFN0b3JhZ2VcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdlZG51eF92ZXJpZmljYXRpb25fZW1haWwnLCBlbWFpbCk7XG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZWRudXhfdmVyaWZpY2F0aW9uX3Bob25lJywgcGhvbmUpO1xuICAgICAgXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICAgIFxuICAgIHZlcmlmeU9UUDogYXN5bmMgKG90cDogc3RyaW5nLCBtZXRob2Q6ICdwaG9uZScgfCAnZW1haWwnKSA9PiB7XG4gICAgICBpZiAoIW90cCB8fCBvdHAubGVuZ3RoICE9PSA0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVmFsaWQgT1RQIGlzIHJlcXVpcmVkJyk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIFNpbXVsYXRlIEFQSSBkZWxheVxuICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDgwMCkpO1xuICAgICAgXG4gICAgICAvLyBDbGVhciB2ZXJpZmljYXRpb24gZGF0YVxuICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ2VkbnV4X3ZlcmlmaWNhdGlvbl9lbWFpbCcpO1xuICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ2VkbnV4X3ZlcmlmaWNhdGlvbl9waG9uZScpO1xuICAgICAgXG4gICAgICAvLyBSZXR1cm4gbW9jayB1c2VyIGFuZCB0b2tlblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdXNlcjogbW9ja1VzZXIsXG4gICAgICAgIHRva2VuOiAnbW9jay1qd3QtdG9rZW4tZm9yLWRldmVsb3BtZW50JyxcbiAgICAgIH07XG4gICAgfSxcbiAgICBcbiAgICByZXNlbmRPVFA6IGFzeW5jICgpID0+IHtcbiAgICAgIC8vIFNpbXVsYXRlIEFQSSBkZWxheVxuICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMCkpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcbiAgICBcbiAgICBmb3Jnb3RQYXNzd29yZDogYXN5bmMgKGVtYWlsOiBzdHJpbmcpID0+IHtcbiAgICAgIGlmICghZW1haWwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFbWFpbCBpcyByZXF1aXJlZCcpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBTaW11bGF0ZSBBUEkgZGVsYXlcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCA2MDApKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgXG4gICAgcmVzZXRQYXNzd29yZDogYXN5bmMgKHRva2VuOiBzdHJpbmcsIG5ld1Bhc3N3b3JkOiBzdHJpbmcpID0+IHtcbiAgICAgIGlmICghdG9rZW4gfHwgIW5ld1Bhc3N3b3JkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVG9rZW4gYW5kIG5ldyBwYXNzd29yZCBhcmUgcmVxdWlyZWQnKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gU2ltdWxhdGUgQVBJIGRlbGF5XG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgNjAwKSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICAgIFxuICAgIGxvZ291dDogYXN5bmMgKCkgPT4ge1xuICAgICAgLy8gU2ltdWxhdGUgQVBJIGRlbGF5XG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMzAwKSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICAgIFxuICAgIGxvZ2luV2l0aEdvb2dsZTogYXN5bmMgKCkgPT4ge1xuICAgICAgLy8gU2ltdWxhdGUgQVBJIGRlbGF5XG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgODAwKSk7XG4gICAgICBcbiAgICAgIC8vIFJldHVybiBtb2NrIHVzZXIgYW5kIHRva2VuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB1c2VyOiBtb2NrVXNlcixcbiAgICAgICAgdG9rZW46ICdtb2NrLWdvb2dsZS1hdXRoLXRva2VuLWZvci1kZXZlbG9wbWVudCcsXG4gICAgICB9O1xuICAgIH0sXG4gICAgXG4gICAgZ2V0Q3VycmVudFVzZXI6IGFzeW5jICgpID0+IHtcbiAgICAgIC8vIENoZWNrIGlmIHdlIGhhdmUgYSB0b2tlblxuICAgICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZWRudXhfdG9rZW4nKTtcbiAgICAgIFxuICAgICAgaWYgKCF0b2tlbikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gU2ltdWxhdGUgQVBJIGRlbGF5XG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMzAwKSk7XG4gICAgICBcbiAgICAgIHJldHVybiBtb2NrVXNlcjtcbiAgICB9XG4gIH07Il0sIm5hbWVzIjpbIm1vY2tVc2VyIiwiaWQiLCJuYW1lIiwiZW1haWwiLCJhdmF0YXIiLCJyb2xlIiwibW9ja0F1dGhTZXJ2aWNlIiwibG9naW4iLCJwYXNzd29yZCIsIkVycm9yIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0IiwidXNlciIsInRva2VuIiwicmVnaXN0ZXIiLCJwaG9uZSIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJ2ZXJpZnlPVFAiLCJvdHAiLCJtZXRob2QiLCJsZW5ndGgiLCJyZW1vdmVJdGVtIiwicmVzZW5kT1RQIiwiZm9yZ290UGFzc3dvcmQiLCJyZXNldFBhc3N3b3JkIiwibmV3UGFzc3dvcmQiLCJsb2dvdXQiLCJsb2dpbldpdGhHb29nbGUiLCJnZXRDdXJyZW50VXNlciIsImdldEl0ZW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/mockAuth.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/providers/AuthProvider.tsx":
/*!****************************************!*\
  !*** ./src/providers/AuthProvider.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthContext: function() { return /* binding */ AuthContext; },\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _lib_mockAuth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/mockAuth */ \"(app-pages-browser)/./src/lib/mockAuth.ts\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,AuthContext auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n// Use mock auth service in development mode\nconst USE_MOCK_AUTH = true;\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nconst API_BASE_URL = \"http://localhost:8000\" || 0;\nconst AuthProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const checkAuthStatus = async ()=>{\n            try {\n                const token = localStorage.getItem(\"ednux_token\");\n                if (!token) {\n                    setIsLoading(false);\n                    return;\n                }\n                if (USE_MOCK_AUTH) {\n                    // Use mock auth service\n                    const mockUser = await _lib_mockAuth__WEBPACK_IMPORTED_MODULE_3__.mockAuthService.getCurrentUser();\n                    if (mockUser) {\n                        setUser(mockUser);\n                    }\n                } else {\n                    // Use real API\n                    const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(\"\".concat(API_BASE_URL, \"/api/auth/me\"), {\n                        headers: {\n                            Authorization: \"Bearer \".concat(token)\n                        }\n                    });\n                    if (response.data.user) {\n                        setUser(response.data.user);\n                    }\n                }\n            } catch (error) {\n                localStorage.removeItem(\"ednux_token\");\n            } finally{\n                setIsLoading(false);\n            }\n        };\n        checkAuthStatus();\n    }, []);\n    const login = async (email, password)=>{\n        try {\n            if (USE_MOCK_AUTH) {\n                // Use mock auth service\n                const result = await _lib_mockAuth__WEBPACK_IMPORTED_MODULE_3__.mockAuthService.login(email, password);\n                localStorage.setItem(\"ednux_token\", result.token);\n                setUser(result.user);\n            } else {\n                // Use real API\n                const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].post(\"\".concat(API_BASE_URL, \"/api/auth/login\"), {\n                    email,\n                    password\n                });\n                const { token, user } = response.data;\n                localStorage.setItem(\"ednux_token\", token);\n                setUser(user);\n            }\n        } catch (error) {\n            throw new Error(\"Login failed\");\n        }\n    };\n    const register = async (name, email, phone, password)=>{\n        try {\n            if (USE_MOCK_AUTH) {\n                // Use mock auth service\n                await _lib_mockAuth__WEBPACK_IMPORTED_MODULE_3__.mockAuthService.register(name, email, phone, password);\n            } else {\n                // Use real API\n                await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].post(\"\".concat(API_BASE_URL, \"/api/auth/register\"), {\n                    name,\n                    email,\n                    phone,\n                    password\n                });\n                // Store email in localStorage for OTP verification\n                localStorage.setItem(\"ednux_verification_email\", email);\n                localStorage.setItem(\"ednux_verification_phone\", phone);\n            }\n        } catch (error) {\n            throw new Error(\"Registration failed\");\n        }\n    };\n    const logout = async ()=>{\n        try {\n            if (USE_MOCK_AUTH) {\n                // Use mock auth service\n                await _lib_mockAuth__WEBPACK_IMPORTED_MODULE_3__.mockAuthService.logout();\n            } else {\n                // Use real API\n                const token = localStorage.getItem(\"ednux_token\");\n                if (token) {\n                    await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].post(\"\".concat(API_BASE_URL, \"/api/auth/logout\"), {}, {\n                        headers: {\n                            Authorization: \"Bearer \".concat(token)\n                        }\n                    });\n                }\n            }\n        } catch (error) {\n            console.error(\"Logout error:\", error);\n        } finally{\n            localStorage.removeItem(\"ednux_token\");\n            setUser(null);\n            router.push(\"/login\");\n        }\n    };\n    const loginWithGoogle = async ()=>{\n        if (USE_MOCK_AUTH) {\n            // Use mock auth service for development\n            try {\n                const result = await _lib_mockAuth__WEBPACK_IMPORTED_MODULE_3__.mockAuthService.loginWithGoogle();\n                localStorage.setItem(\"ednux_token\", result.token);\n                setUser(result.user);\n            } catch (error) {\n                throw new Error(\"Google login failed\");\n            }\n        } else {\n            // This would typically open a popup or redirect for Google OAuth in production\n            try {\n                window.open(\"\".concat(API_BASE_URL, \"/api/auth/google\"), \"_self\");\n            } catch (error) {\n                throw new Error(\"Google login failed\");\n            }\n        }\n    };\n    const forgotPassword = async (email)=>{\n        try {\n            if (USE_MOCK_AUTH) {\n                // Use mock auth service\n                await _lib_mockAuth__WEBPACK_IMPORTED_MODULE_3__.mockAuthService.forgotPassword(email);\n            } else {\n                // Use real API\n                await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].post(\"\".concat(API_BASE_URL, \"/api/auth/forgot-password\"), {\n                    email\n                });\n            }\n        } catch (error) {\n            throw new Error(\"Failed to send password reset email\");\n        }\n    };\n    const resetPassword = async (token, newPassword)=>{\n        try {\n            if (USE_MOCK_AUTH) {\n                // Use mock auth service\n                await _lib_mockAuth__WEBPACK_IMPORTED_MODULE_3__.mockAuthService.resetPassword(token, newPassword);\n            } else {\n                // Use real API\n                await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].post(\"\".concat(API_BASE_URL, \"/api/auth/reset-password\"), {\n                    token,\n                    password: newPassword\n                });\n            }\n        } catch (error) {\n            throw new Error(\"Password reset failed\");\n        }\n    };\n    const verifyOTP = async (otp, method)=>{\n        try {\n            if (USE_MOCK_AUTH) {\n                // Use mock auth service\n                const result = await _lib_mockAuth__WEBPACK_IMPORTED_MODULE_3__.mockAuthService.verifyOTP(otp, method);\n                localStorage.setItem(\"ednux_token\", result.token);\n                setUser(result.user);\n            } else {\n                // Use real API\n                const verificationData = {\n                    otp\n                };\n                if (method === \"email\") {\n                    verificationData.email = localStorage.getItem(\"ednux_verification_email\");\n                } else {\n                    verificationData.phone = localStorage.getItem(\"ednux_verification_phone\");\n                }\n                const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].post(\"\".concat(API_BASE_URL, \"/api/auth/verify-otp\"), verificationData);\n                const { token, user } = response.data;\n                localStorage.setItem(\"ednux_token\", token);\n                setUser(user);\n                // Clear verification data\n                localStorage.removeItem(\"ednux_verification_email\");\n                localStorage.removeItem(\"ednux_verification_phone\");\n            }\n        } catch (error) {\n            throw new Error(\"OTP verification failed\");\n        }\n    };\n    const resendOTP = async (method)=>{\n        try {\n            if (USE_MOCK_AUTH) {\n                // Use mock auth service\n                await _lib_mockAuth__WEBPACK_IMPORTED_MODULE_3__.mockAuthService.resendOTP();\n            } else {\n                // Use real API\n                const verificationData = {};\n                if (method === \"email\") {\n                    verificationData.email = localStorage.getItem(\"ednux_verification_email\");\n                } else {\n                    verificationData.phone = localStorage.getItem(\"ednux_verification_phone\");\n                }\n                await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].post(\"\".concat(API_BASE_URL, \"/api/auth/resend-otp\"), verificationData);\n            }\n        } catch (error) {\n            throw new Error(\"Failed to resend OTP\");\n        }\n    };\n    const contextValue = {\n        user,\n        isAuthenticated: !!user,\n        isLoading,\n        login,\n        register,\n        logout,\n        loginWithGoogle,\n        forgotPassword,\n        resetPassword,\n        verifyOTP,\n        resendOTP\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/workspaces/Ednux-frontend/src/providers/AuthProvider.tsx\",\n        lineNumber: 278,\n        columnNumber: 10\n    }, undefined);\n};\n_s(AuthProvider, \"8WEfEbosx3NfLBPRVajZSQS3udc=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = AuthProvider;\n\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/providers/AuthProvider.tsx\n"));

/***/ })

});